{
  "_args": [
    [
      {
        "raw": "react-native-material-bottom-navigation",
        "scope": null,
        "escapedName": "react-native-material-bottom-navigation",
        "name": "react-native-material-bottom-navigation",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/itauaferreiramachado/workspace/pelletteria"
    ]
  ],
  "_from": "react-native-material-bottom-navigation@latest",
  "_id": "react-native-material-bottom-navigation@0.5.1",
  "_inCache": true,
  "_location": "/react-native-material-bottom-navigation",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-native-material-bottom-navigation-0.5.1.tgz_1494873953520_0.5064934275578707"
  },
  "_npmUser": {
    "name": "timomeh",
    "email": "maemecketimo@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-material-bottom-navigation",
    "scope": null,
    "escapedName": "react-native-material-bottom-navigation",
    "name": "react-native-material-bottom-navigation",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-material-bottom-navigation/-/react-native-material-bottom-navigation-0.5.1.tgz",
  "_shasum": "50339df7243ae1fdbea6f89d6457908f92b90c83",
  "_shrinkwrap": null,
  "_spec": "react-native-material-bottom-navigation",
  "_where": "/Users/itauaferreiramachado/workspace/pelletteria",
  "author": {
    "name": "Timo Mämecke",
    "email": "maemecketimo@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/timomeh/react-native-material-bottom-navigation/issues"
  },
  "dependencies": {},
  "description": "JS Implementation of the Material Design Guidelines' Bottom Navigation for react-native",
  "devDependencies": {
    "babel-jest": "18.0.0",
    "babel-preset-react-native": "1.9.1",
    "jest": "18.1.0",
    "react-test-renderer": "~15.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "50339df7243ae1fdbea6f89d6457908f92b90c83",
    "tarball": "https://registry.npmjs.org/react-native-material-bottom-navigation/-/react-native-material-bottom-navigation-0.5.1.tgz"
  },
  "homepage": "https://github.com/timomeh/react-native-material-bottom-navigation#readme",
  "jest": {
    "preset": "react-native"
  },
  "keywords": [
    "react-native",
    "material",
    "bottomnavigation",
    "bottom navigation",
    "ios",
    "android",
    "react-component",
    "react-navigation"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "timomeh",
      "email": "maemecketimo@gmail.com"
    }
  ],
  "name": "react-native-material-bottom-navigation",
  "optionalDependencies": {},
  "readme": "# Material Design Bottom Navigation for react-native\n\nA highly accurate Bottom Navigation Component for react-native, based on [Material Guidelines' Bottom Navigation](https://material.io/guidelines/components/bottom-navigation.html).\n\n* Support for iOS and Android (it's programmed only in JavaScript)\n* Uses those dope Ripple Transitions between two background colors\n* Follows the Material Design Guidelines\n* Switches automatically between Fixed Navigation (up to 3 tabs) and Shifting Navigation (3 - 5 tabs)\n* No dependencies\n* Support for [react-navigation](https://reactnavigation.org)\n\nThe Bottom navigation looks lovely. That's probably the reason why you're here. Using a Bottom Navigation is a good choice. More and more apps are switching from a Burger Menu and/or [Tabs](https://material.io/guidelines/components/tabs.html) to a Bottom Navigation, including Google Apps.\n\n**Fixed Bottom Navigation**\n\n![with 3 tabs in white](.github/white-3-tab.gif) ![with 3 tabs in color](.github/color-3-tab.gif)\n\n**Shifting Bottom Navigation**\n\n![with 4 tabs in white](.github/white-4-tab.gif) ![with 4 tabs in color](.github/color-4-tab.gif)\n\n**Behind the Android System Navigation Bar**\n\n![behind navigation bar](.github/behind-nav-bar.gif)\n\n\n- [Install](#install)\n- [But how? (Usage)](#but-how)\n- [Configuration](#configuration)\n- [Behind the Navigation Bar](#behind-the-navigation-bar)\n- [Usage for react-navigation](#usage-for-react-navigation)\n- [Roadmap](#roadmap)\n- [LICENSE](#license)\n\n## Install\n\n```sh\n# via npm\n$ npm install react-native-material-bottom-navigation --save\n\n# via yarn\n$ yarn add react-native-material-bottom-navigation\n```\n\n\n## But how?\n\nThis is an example for a Bottom Navigation with 4 Tabs, each Tab has its own background color.\n\nIn this example, I used [react-native-vector-icons](https://github.com/oblador/react-native-vector-icons) as Icon Components. You can use whatever Component you want.\n\n```jsx\nimport React, { Component } from 'react'\nimport BottomNavigation, { Tab } from 'react-native-material-bottom-navigation'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <BottomNavigation\n        labelColor=\"white\"\n        rippleColor=\"white\"\n        style={{ height: 56, elevation: 8, position: 'absolute', left: 0, bottom: 0, right: 0 }}\n        onTabChange={(newTabIndex) => alert(`New Tab at position ${newTabIndex}`)}\n      >\n        <Tab\n          barBackgroundColor=\"#37474F\"\n          label=\"Movies & TV\"\n          icon={<Icon size={24} color=\"white\" name=\"tv\" />}\n        />\n        <Tab\n          barBackgroundColor=\"#00796B\"\n          label=\"Music\"\n          icon={<Icon size={24} color=\"white\" name=\"music-note\" />}\n        />\n        <Tab\n          barBackgroundColor=\"#5D4037\"\n          label=\"Books\"\n          icon={<Icon size={24} color=\"white\" name=\"book\" />}\n        />\n        <Tab\n          barBackgroundColor=\"#3E2723\"\n          label=\"Newsstand\"\n          icon={<Icon size={24} color=\"white\" name=\"newspaper\" />}\n        />\n      </BottomNavigation>\n    )\n  }\n}\n```\n\n## Configuration\n\nDon't skip this part. You will be happy to know about all the good stuff you can configure here.\n\n**Note:** If you are searching for more customization options, like label styles for fonts/positioning/..., they are *intentionally* not supported. More and more customizations would be actively against the Material Design Guidelines, and I want to encourage you to follow the Guidelines.\n\n### BottomNavigation\n\n| Prop | Description  | Type | Defaut |\n|------|--------------|------|--------|\n| **`activeTab`** | Index of the preselected Tab, starting from 0. | `number` | `0` |\n| **`labelColor`** | Text Color of the Tab's Label. Can be overwritten by the Tab itself. | `string` | `rgba(0, 0, 0, 0.54)` |\n| **`activeLabelColor`** | Text Color of the active Tab's Label. Can be overwritten by the Tab itself. | `string` | `labelColor` |\n| **`rippleColor`** | Color of the small Ripple Effect when the Tab will be pressed. Has opacity of `0.12`. | `string` | `black` |\n| **`backgroundColor`** | Background color of the Bottom Navigation. Can be overwritten by the Tab itself, to achive different background colors for each active Tab. | `string` | `white` |\n| **`onTabChange`** | Function to be called when a Tab was clicked and changes into active state. Will be called with parameters `(newTabIndex, oldTabIndex) => {}`. | `function` | `noop` |\n| **`style`** | **Required.** Style will be directly applied to the component. Use this to set the height of the BottomNavigation (should be 56), to position it, to add shadow and border. The only pre-set rule is `overflow: hidden`. | `object` | **Required.** |\n| **`innerStyle`** | All tabs are wrapped in another container. Use this to add styles to this container. The main reason why you would want to use this is to put the Navigation behind the Android System Navigation Bar. See below for an example on how to achieve this. | `object` | – |\n| **`shifting`** | Turn manually on/off shifting mode. | `boolean` | `true` if > 3 Tabs, otherwise `false` |\n\n**Hints:**\n\n- Elevation should be `8`\n- Height should be `56`\n- Width should be 100%\n- Follow all specs defined in the [Official Guidelines](https://material.io/guidelines/components/bottom-navigation.html#bottom-navigation-specs)\n\n\n### Tab\n\n| Prop | Description  | Type | Defaut |\n|------|--------------|------|--------|\n| **`icon`** | **Required.** Component to render as icon. Should have height and width of `24`. | `ReactElement<*>` | **Required.** |\n| **`activeIcon`** | Component to render as icon when the Tab is active. Should have height and width of `24`. Use this to change the color of the icon. | `ReactElement<*>` | `icon` |\n| **`label`** | **Required.** Text of the Label. | `string` | **Required.** |\n| **`labelColor`** | Text Color of the Label. | `string` | `labelColor` of BottomNavigation |\n| **`activeLabelColor`** | Text Color of the Label when the Tab is active. | `string` | `activeLabelColor` of BottomNavigation |\n| **`barBackgroundColor`** | Background color for the whole component, if the tab is active. | `string` | `backgroundColor` of BottomNavigation |\n\n\n## Behind the Navigation Bar\n\nIn the Material Design Guidelines you can see examples with the Bottom Navigation behind the Software Navigation Bar. That looks pretty sweet. In theory, that's pretty simple. In practice there's a problem: Not every device has a visible Navigation Bar. If someone has hardware buttons on his phone, the Navigation Bar is usually hidden. As of now, we can't simply detect if it's visible. If you don't detect it and just add the following code, the BottomNavigation will have a huge padding-bottom on devices without a Navigation Bar.\n\nSee [Issue #28](https://github.com/timomeh/react-native-material-bottom-navigation/issues/28) for more informations with an initial proposal by @keeleycarrigan.\n\nHowever, if you know what you're doing, you only need to adjust a few things:\n\n**Step 1.** In order to make the System Navigation translucent, you have to add this to `android/app/src/main/res/values/styles.xml`:\n\n```xml\n<!-- Customize your theme here. -->\n<item name=\"android:navigationBarColor\">@android:color/transparent</item>\n<item name=\"android:windowTranslucentNavigation\">true</item>\n```\n\n**Step 2.** The System Navigation has a height of 48dp. The Bottom Navigation should be 56dp tall. This makes a total height of 104. Use `innerStyle` to push the tabs above the System Navigation without pushing the whole Bottom Navigation above it.\n\n```jsx\n<BottomNavigation\n  style={{ height: 104, ... }}\n  innerStyle={{ paddingBottom: 48 }}\n>\n```\n\n**Step 3.** You're done!\n\n\n## Usage for [react-navigation](https://reactnavigation.org)\n\nThis package includes a Component to plug into react-navigation. It is as configurable as the standalone version. To achieve this, it uses a separate configuration inside `tabBarOptions`. You can only set those configurations for the Bottom Navigation inside the `TabNavigatorConfig` of `TabNavigator()` – **not inside `static navigationOptions` or inside the `RouteConfigs`**.\n\nThe following example will explain everything you need to get started.\n\n```jsx\n\nimport React from 'react'\nimport { NavigationComponent } from 'react-native-material-bottom-navigation'\nimport { TabNavigator } from 'react-navigation'\nimport { AppRegistry } from 'react-native';\n\nclass MoviesAndTV extends React.Component {\n  static navigationOptions = {\n    tabBarLabel: 'Movies & TV',\n    tabBarIcon: () => (<Icon size={24} color=\"white\" name=\"tv\" />)\n  }\n\n  render() { ... }\n}\n\nclass Music extends React.Component {\n  static navigationOptions = {\n    tabBarLabel: 'Music',\n    tabBarIcon: () => (<Icon size={24} color=\"white\" name=\"music-note\" />)\n  }\n\n  render() { ... }\n}\n\nclass Newsstand extends React.Component {\n  static navigationOptions = {\n    tabBarLabel: 'Newsstand',\n    tabBarIcon: () => (<Icon size={24} color=\"white\" name=\"Newsstand\" />)\n  }\n\n  render() { ... }\n}\n\nconst MyApp = TabNavigator({\n  MoviesAndTV: { screen: MoviesAndTV },\n  Music: { screen: Music },\n  Newsstand: { screen: Newsstand }\n}, {\n  tabBarComponent: NavigationComponent,\n  tabBarPosition: 'bottom',\n  tabBarOptions: {\n    bottomNavigationOptions: {\n      labelColor: 'white',\n      rippleColor: 'white',\n      tabs: {\n        MoviesAndTV: {\n          barBackgroundColor: '#37474F'\n        },\n        Music: {\n          barBackgroundColor: '#00796B'\n        },\n        Newsstand: {\n          barBackgroundColor: '#EEEEEE',\n          labelColor: '#434343', // like in the standalone version, this will override the already specified `labelColor` for this tab\n          activeLabelColor: '#212121',\n          activeIcon: <Icon size={24} color=\"#212121\" name=\"newsstand\" />\n        }\n      }\n    }\n  }\n})\n\nAppRegistry.registerComponent('MyApp', () => MyApp)\n```\n\n### [TabNavigatorConfig](https://reactnavigation.org/docs/navigators/tab#TabNavigatorConfig)\n\n- `tabBarComponent`: Use `NavigationComponent` provided by `react-native-material-bottom-navigation`.\n- `tabBarPosition`: Use `bottom`.\n- `tabBarOptions`: react-navigation's configuration of the tab bar.\n\n\n### tabBarOptions\n\nThe only options, which will affect the Bottom Navigation, are the following:\n\n- `style`: Corresponds to the `style` prop of [`BottomNavigation`](#BottomNavigation). If no height is specified, it will use `height: 56`. This way you don't need any styling in most cases.\n- `bottomNavigationOptions`: The options for the Bottom Navigation, see below.\n\n\n### bottomNavigationOptions\n\nAll options of [`BottomNavigation`](#BottomNavigation) are available. They behave like the options in the standalone version, including fallback- and default-behaviour.\n\n- **`labelColor`**\n- **`activeLabelColor`**\n- **`rippleColor`**\n- **`backgroundColor`**\n- **`style`**: If specified, `tabBarOptions.style` won't be used.\n- **`innerStyle`**\n- **`shifting`**\n- **`tabs`**: Configuration for the tabs, see below.\n\n*Note: `activeTab` and `onTabChange` don't have any effect, since this is handled by react-navigation.*\n\n\n### tabs\n\nEach tab can be configured by its key from `RouteConfigs`. *If you take a look at the example, you will see that `MoviesAndTV`, `Music` and `Newsstand` correspond to each other.*\n\n- **`tab`** is an object with `{ [routeKey]: tabOptions }`\n\n### tabOptions\n\nAll options of [`Tab`](#Tab) are available. They behave like the options in the standalone version, including fallback- and default-behaviour.\n\n- **`icon`**: If not specified, the icon inside `static navigationOptions.tabBar` of the scene will be used.\n- **`activeIcon`**\n- **`label`**: If not specified, the label inside `static navigationOptions.tabBar` of the scene will be used.\n- **`labelColor`**\n- **`activeLabelColor`**\n- **`barBackgroundColor`**\n\n\n### Why don't you use all the options provided by react-navigation?\n\nAt the time I developed this, react-navigation was in an early beta stage. It wasn't easy to get those options and add new options. I could only access the configs inside `tabBarOptions`, hence everything is stored there.\n\n## Roadmap\n\nCheck if they are any new features announced in the [Issues](https://github.com/timomeh/react-native-material-bottom-navigation/issues).\n\n## [LICENSE](LICENSE.md)\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timomeh/react-native-material-bottom-navigation.git"
  },
  "scripts": {},
  "version": "0.5.1"
}
